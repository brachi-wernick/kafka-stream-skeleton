version: "3"

services:
  zookeeper:
    image: wurstmeister/zookeeper
    container_name: zookeeper
    restart: always
    ports:
    - "2181:2181"

  kafka:
    image: wurstmeister/kafka
    container_name: kafka
    depends_on:
    - zookeeper
    restart: always
    ports:
    - "9092:9092"
    environment:
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_CREATE_TOPICS: "users-counts:1:1"
      KAFKA_ADVERTISED_HOST_NAME: "${LOCALHOST_IP}"

#  producer:
#    build: producer
#    environment:
#      KAFKA_URL: kafka:9092
#      INPUT_TOPIC: "users-data"
#    restart: always
#    container_name: kafka-producer
#    ports:
#    - "9088:9088"

  stream:
   build: kafka-stream
   restart: always
   environment:
     KAFKA_URL: kafka:9092
     zookeeper_URL: zookeeper:2181
     INPUT_TOPIC: "users-data"
     OUTPUT_TOPIC: "users-counts"
     APPLICATION_ID: "stream_users_app1"
   container_name: kafka-stream
   ports:
   - "9089:9089"

  consumer:
    build: consumer
    restart: always
    environment:
      OUTPUT_TOPIC: "users-counts"
      KAFKA_URL: kafka:9092
      CONSUMER_GROUP: "users_count_group1"
    container_name: kafka-consumer
    ports:
    - "9090:9090"

  datagen:
    image: confluentinc/ksql-examples:latest
    container_name: datagen
    depends_on:
    - zookeeper
    - kafka
    volumes:
    - ./schema:/schema
    command: "bash -c 'ksql-datagen \
                      schema=./schema/model.avro \
                      key=userName \
                          format=json \
                          topic=users-data \
                          maxInterval=1000 \
                          bootstrap-server=kafka:9092 \
                          propertiesFile=./schema/datagen.properties'"
volumes:
  schema: